diff --git a/Dockerfile b/Dockerfile
index 78d368a..75d7879 100644
--- a/Dockerfile
+++ b/Dockerfile
@@ -23,7 +23,7 @@ FROM ${DEV_IMAGE} AS build
 # don't provide "default" values (e.g. 'ARG TARGETARCH=amd64') for non-buildx environments,
 # see https://github.com/docker/buildx/issues/510
 ARG TARGETOS=linux
-ARG TARGETARCH=amd64
+ARG TARGETARCH=ppc64le
 
 LABEL image="build"
 
@@ -39,7 +39,7 @@ COPY version /etc/modelmesh-version
 RUN --mount=type=cache,target=/root/.cache/go-build \
     --mount=type=cache,target=/go/pkg \
     GOOS=${TARGETOS:-linux} \
-    GOARCH=${TARGETARCH:-amd64} \
+    GOARCH=${TARGETARCH:-ppc64le} \
     CGO_ENABLED=0 \
     GO111MODULE=on \
     go build -a -o /workspace/manager main.go
diff --git a/Dockerfile.develop b/Dockerfile.develop
index b0c5b19..a17f246 100644
--- a/Dockerfile.develop
+++ b/Dockerfile.develop
@@ -21,7 +21,7 @@ FROM registry.access.redhat.com/ubi8/go-toolset:1.19
 # don't provide "default" values (e.g. 'ARG TARGETARCH=amd64') for non-buildx environments,
 # see https://github.com/docker/buildx/issues/510
 ARG TARGETOS
-ARG TARGETARCH
+ARG TARGETARCH=ppc64le
     
 ARG OPENSHIFT_VERSION=4.12
 ARG KUSTOMIZE_VERSION=4.5.2
diff --git a/Dockerfile.develop.ci b/Dockerfile.develop.ci
index 5fc1dd8..0d8eaa0 100644
--- a/Dockerfile.develop.ci
+++ b/Dockerfile.develop.ci
@@ -21,7 +21,7 @@ FROM registry.access.redhat.com/ubi8/go-toolset:1.19
 # don't provide "default" values (e.g. 'ARG TARGETARCH=amd64') for non-buildx environments,
 # see https://github.com/docker/buildx/issues/510
 ARG TARGETOS=linux
-ARG TARGETARCH=amd64
+ARG TARGETARCH=ppc64le
     
 ARG OPENSHIFT_VERSION=4.12
 ARG KUSTOMIZE_VERSION=4.5.2
diff --git a/Makefile b/Makefile
index 01ee07e..57da7bc 100644
--- a/Makefile
+++ b/Makefile
@@ -49,7 +49,7 @@ all: manager
 # Run unit tests
 .PHONY: test
 test:
-	go test -coverprofile cover.out `go list ./... | grep -v fvt`
+	go test -v -coverprofile cover.out `go list ./... | grep -v fvt`
 
 # Run fvt tests. This requires an etcd, kubernetes connection, and model serving installation. Ginkgo CLI is used to run them in parallel
 .PHONY: fvt
diff --git a/scripts/build_devimage.sh b/scripts/build_devimage.sh
index 9a2b500..1e1610a 100755
--- a/scripts/build_devimage.sh
+++ b/scripts/build_devimage.sh
@@ -37,8 +37,13 @@ else
   mkdir -p $CONTEXT_DIR
   cp ${DEV_DEPS} ${CONTEXT_DIR}
   echo "Building dev image ${FULL_IMAGE_NAME}"
+  if [ $(uname -m) == ppc64le ];then
+    echo "Fetching Power specific image"
+    $ENGINE build -f ${CONTEXT_DIR}/Dockerfile.develop -t ${FULL_IMAGE_NAME} --build-arg KUSTOMIZE_VERSION=5.1.0 ${CONTEXT_DIR}
+  else
   $ENGINE build -f ${CONTEXT_DIR}/Dockerfile.develop -t ${FULL_IMAGE_NAME} ${CONTEXT_DIR}
 fi
+fi
 echo -n "${FULL_IMAGE_NAME}" > .develop_image_name
 
 NUM_LAYERS=$($ENGINE images -q "${FULL_IMAGE_NAME}" | xargs $ENGINE history | egrep -v "^IMAGE" | wc -l | tr -d ' ')
